# Generated by Django 4.0.3 on 2022-03-06 16:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import library.models.booking


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('phone', models.CharField(blank=True, max_length=200, null=True)),
                ('kota_kab', models.CharField(blank=True, max_length=200, null=True)),
                ('photo', models.ImageField(blank=True, max_length=500, null=True, upload_to='images/users/')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('preview_text', models.TextField()),
                ('preview_img', models.ImageField(blank=True, max_length=500, null=True, upload_to='images/articles/')),
                ('data', models.BinaryField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BookHoursDict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hour_start', models.TimeField()),
                ('hour_end', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_book', models.DateField()),
                ('lunas', models.BooleanField()),
                ('price', models.BigIntegerField()),
                ('unique_price', models.BigIntegerField()),
                ('ts_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('payment_dl', models.DateTimeField(default=library.models.booking.one_hour_hence)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='BookingStatusCatalog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='CityList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Court',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('rate', models.BigIntegerField()),
                ('dp', models.BigIntegerField()),
                ('room', models.CharField(blank=True, choices=[('indoor', 'Indoor'), ('outdoor', 'Outdoor')], max_length=100, null=True)),
                ('floor', models.CharField(blank=True, max_length=200, null=True)),
                ('loker', models.BooleanField(default=False)),
                ('ruang_ganti', models.BooleanField(default=False)),
                ('shower_room', models.BooleanField(default=False)),
                ('deskripsi', models.TextField(blank=True, null=True)),
                ('img1', models.ImageField(blank=True, max_length=500, null=True, upload_to='images/courts/')),
                ('img2', models.ImageField(blank=True, max_length=500, null=True, upload_to='images/courts/')),
                ('img3', models.ImageField(blank=True, max_length=500, null=True, upload_to='images/courts/')),
                ('img4', models.ImageField(blank=True, max_length=500, null=True, upload_to='images/courts/')),
                ('img5', models.ImageField(blank=True, max_length=500, null=True, upload_to='images/courts/')),
                ('img6', models.ImageField(blank=True, max_length=500, null=True, upload_to='images/courts/')),
                ('img7', models.ImageField(blank=True, max_length=500, null=True, upload_to='images/courts/')),
                ('img8', models.ImageField(blank=True, max_length=500, null=True, upload_to='images/courts/')),
                ('img9', models.ImageField(blank=True, max_length=500, null=True, upload_to='images/courts/')),
                ('img10', models.ImageField(blank=True, max_length=500, null=True, upload_to='images/courts/')),
                ('n_book', models.IntegerField(default=0)),
                ('ts_created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='KecamatanList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.citylist')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=200, unique=True)),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='TypeOfSport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=200, unique=True)),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='UserPartner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('phone', models.CharField(blank=True, max_length=200, null=True)),
                ('company', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('op_hours_start', models.TimeField(default='09:00')),
                ('op_hours_end', models.TimeField(default='21:00')),
                ('photo', models.ImageField(blank=True, max_length=500, null=True, upload_to='images/partners/')),
                ('ts_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='library.citylist')),
                ('kecamatan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='library.kecamatanlist')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentConfirm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bukti', models.ImageField(max_length=500, upload_to='images/payments/')),
                ('read', models.BooleanField(default=False)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.booking')),
            ],
        ),
        migrations.CreateModel(
            name='KPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_s', models.IntegerField(blank=True, null=True)),
                ('book_f', models.IntegerField(blank=True, null=True)),
                ('confirm_t', models.TimeField(blank=True, null=True)),
                ('user_partner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='library.userpartner')),
            ],
        ),
        migrations.CreateModel(
            name='FavCourt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('court', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.court')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='court',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='library.typeofsport'),
        ),
        migrations.AddField(
            model_name='court',
            name='user_partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.userpartner'),
        ),
        migrations.CreateModel(
            name='BookingStatusEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ts_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('booking_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.booking')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='library.bookingstatuscatalog')),
            ],
        ),
        migrations.CreateModel(
            name='BookingHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_hours', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='library.bookhoursdict')),
                ('booking_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.booking')),
            ],
        ),
        migrations.AddField(
            model_name='booking',
            name='court',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='library.court'),
        ),
        migrations.AddField(
            model_name='booking',
            name='method',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='library.paymentmethod'),
        ),
        migrations.AddField(
            model_name='booking',
            name='status',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='library.bookingstatuscatalog'),
        ),
        migrations.AddField(
            model_name='booking',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='booking',
            name='user_partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='library.userpartner'),
        ),
        migrations.AddField(
            model_name='user',
            name='sport_pref',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='library.typeofsport'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
